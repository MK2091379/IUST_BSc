# -*- coding: utf-8 -*-
"""HW1_SayyedMoeinKazemi_98521396.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10sT0Y3ucJCxzLPOpI8ubZQevv9ufUJDT
"""

from sys import setrecursionlimit
from threading import stack_size
from numpy import zeros
setrecursionlimit(10**6)
stack_size(2**27)
Instructions={
    "add":{"func":"100000","format":"R-Format"},
    "addu":{"func":"100001","format":"R-Format"},
    "addi":{"func":"001000","format":"I-Format-1"},
    "and":{"func":"100100","format":"R-Format"},
    "andi":{"func":"001100","format":"I-Format-1"},
    "nor":{"func":"100111","format":"R-Format"},
    "or":{"func":"100101","format":"R-Format"},
    "ori":{"func":"001101","format":"I-Format-1"},
    "sll":{"func":"000000","format":"R-Format"},
    "sra":{"func":"000011","format":"R-Format"},
    "xor":{"func":"100110","format":"R-Format"},
    "xori":{"func":"001110","format":"I-Format-1"},
    "slt":{"func":"101010","format":"R-Format"},
    "sltu":{"func":"101001","format":"R-Format"},
    "slti":{"func":"001010","format":"I-Format-1"},
    "beq":{"func":"000100","format":"I-Format-2"},
    "bne":{"func":"000101","format":"I-Format-2"},
    "j":{"func":"000010","format":"J-Format"},
    "jal":{"func":"000011","format":"J-Format"},
    "lb":{"func":"100000","format":"I-Format-3"},
    "lbu":{"func":"100100","format":"I-Format-3"},
    "lw":{"func":"100011","format":"I-Format-3"},
    "lui":{"func":"001111","format":"I-Format-3"},
    "sb":{"func":"101000","format":"I-Format-3"},
    "sw":{"func":"101011","format":"I-Format-3"}
}

Registers = {
    "$zero":"00000",
    "$v0":"00010",
    "$v1":"00011",
    "$a0":"00100",
    "$a1":"00101",
    "$a2":"00110",
    "$a3":"00111",
    "$t0":"01000",
    "$t1":"01001",
    "$t2":"01010",
    "$t3":"01011",
    "$t4":"01100",
    "$t5":"01101",
    "$t6":"01110",
    "$t7":"01111",
    "$t8":"11000",
    "$t9":"11001",
    "$s0":"10000",
    "$s1":"10001",
    "$s2":"10010",
    "$s3":"10011",
    "$s4":"10100",
    "$s5":"10101",
    "$s6":"10110",
    "$s7":"10111",
    "$gp":"11100",
    "$sp":"11101",
    "$fp":"11110",
    "$ra":"11111"
}
print("FileNmae:")
FileName=input()
f=open(FileName, "r")
Rows=f.readlines()
k = 0
while(k<len(Rows)):
    res=str()
    IsAcceptableOrNot=False
    Rows[k]=Rows[k].replace(str("(") , str(","))
    Rows[k]=Rows[k].replace(str(')') , str(''))
    editedCommand = Rows[k].replace(str(' '), str(''))
    if editedCommand[-2]==str(':') or editedCommand[-1]==str(':'):
        IsAcceptableOrNot=True
        editedCommand=editedCommand.split(str(':'))
        res='{0:032b}'.format(int(str(int(str('').join(str(ord(alphabet)) for alphabet in editedCommand[0]))%(2**32))))
    else:
        Dollor_Time=True
        Hashtag_time=True
        for i in range(len(editedCommand)):
            if editedCommand[i]==str('$') and Dollor_Time:
                editedCommand=editedCommand[:i]+str(',')+editedCommand[i:]
                Dollor_Time=False
            if editedCommand[i]==str('#')and Hashtag_time:
                editedCommand=editedCommand[:i]+str(',')+editedCommand[i:]
                Hashtag_time=False
                break
        editedCommand=editedCommand.split(str(','))
        if str("j") in editedCommand[0]:
            IsAcceptableOrNot=True
            the_String=str("")
            if str("jal") in editedCommand[0]:
                the_String=editedCommand[0][3:]
                Function=Instructions[str("jal")][str("func")]
            else:
                the_String=editedCommand[0][1:]
                Function=Instructions[str("j")][str("func")]
            res=Function+'{0:026b}'.format(int(str(int(''.join(str(ord(alphabet)) for alphabet in editedCommand[0]))%(2**26))))
        else:
            Function=Instructions[editedCommand[0]][str("func")]
            Format=Instructions[editedCommand[0]][str("format")]
            if str(Format)==str(str('R-Format')):
                TheOpcode=str("000000")
                if len(editedCommand[3])==3 or str('$') in editedCommand[3]:
                    IsAcceptableOrNot=True
                    theRegister_s=Registers[editedCommand[2]]
                    theRegister_t=Registers[editedCommand[3]]
                    theRegister_d=Registers[editedCommand[1]]
                    Shift_Shamt=str("00000")
                else:
                    IsAcceptableOrNot=True
                    theRegister_s=Registers[editedCommand[2]]
                    theRegister_t=Registers[editedCommand[1]]
                    theRegister_d=str("00000")
                    Shift_Shamt='{0:05b}'.format(int(editedCommand[3]))
                if IsAcceptableOrNot:
                    res=TheOpcode+theRegister_s+theRegister_t+theRegister_d+Shift_Shamt+Function
            elif Format[0]==str('I'):
                if str(Format)==str("I-Format-1"):
                    IsAcceptableOrNot=True
                    theRegister_s=Registers[editedCommand[2]]
                    theRegister_t=Registers[editedCommand[1]]
                    detectConst_Add=('{0:016b}'.format(int(editedCommand[3])))
                elif str(Format)==str("I-Format-2"):
                    IsAcceptableOrNot=True
                    theRegister_s=Registers[editedCommand[1]]
                    theRegister_t=Registers[editedCommand[2]]
                    detectConst_Add=('{0:016b}'.format(int(''.join(str(ord(Nom)) for Nom in editedCommand[3]))))
                elif str(Format)==str("I-Format-3"):
                    IsAcceptableOrNot=True
                    theRegister_s=Registers[editedCommand[3]]
                    theRegister_t=Registers[editedCommand[1]]
                    detectConst_Add=('{0:016b}'.format(int(editedCommand[2])))
                if IsAcceptableOrNot:
                    res=Function+theRegister_s+theRegister_t+detectConst_Add
    if IsAcceptableOrNot:
        print(res)
    else:
        print("somthing got wrong")
        exit(0)
    k+=1