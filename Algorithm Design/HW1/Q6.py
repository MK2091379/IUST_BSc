# -*- coding: utf-8 -*-
"""HW1_SayyedMoeinKazemi_98521396.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10sT0Y3ucJCxzLPOpI8ubZQevv9ufUJDT
"""

from sys import setrecursionlimit
from threading import stack_size
from numpy import zeros
setrecursionlimit(10**6)
stack_size(2**27)
def func(arr,n):
    income = zeros(n)
    maximumPrice = arr[n-1]
    for i in range(n-2, 0, -1):
        if arr[i] > maximumPrice:
            maximumPrice = arr[i]
        income[i] = max(income[i+1], maximumPrice - arr[i])
    minimumPrice = arr[0]
    for i in range(1, n):
        if arr[i] < minimumPrice:
            minimumPrice = arr[i]
        income[i] = max(income[i-1], income[i]+(arr[i]-minimumPrice))
    result = income[n-1]
    print(int(result))
n = int(input())
arr = [int(i) for i in input().split()]
func(arr,n)